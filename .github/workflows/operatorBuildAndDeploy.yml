name: Cass Operator Build & Deploy
on:
  push:
    branches:
      - master
      - "1.4.x"
  pull_request:
    branches: [ master ]
jobs:
  build_operator_docker:
    name: Build Cass Operator Docker Image
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      GOROOT: /usr/local/go1.13
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/checkout@v2
        if: github.event_name != 'pull_request'
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Install Mage
        run: |
          cd /tmp
          wget https://github.com/magefile/mage/releases/download/v1.9.0/mage_1.9.0_Linux-64bit.tar.gz
          tar -xvf mage_1.9.0_Linux-64bit.tar.gz
          mkdir -p $GOPATH/bin
          mv mage $GOPATH/bin/mage
          sudo chmod +x $GOPATH/bin/mage
      - name: Test Sdk Generate
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          mage operator:testSdkGenerate
      - name: Test Client Generate
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          mage operator:testGenerateClient
      - name: Unit Tests
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          mage operator:testGo
      - name: Login to GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ github.actor }}" --password-stdin
      - name: Login to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ECR_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_SECRET }}
        run: $(aws ecr get-login --no-include-email --region us-east-1)
      - name: Setup Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and Push Docker
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'datastax/cass-operator'
        env:
          ECR_REPO: ${{ secrets.ECR_REPO }}
          PR_REF: ${{ github.event.pull_request.head.ref }}
          GITHUB_REPO_OWNER: ${{ github.repository_owner }}
        run: |
          if [ "${GITHUB_EVENT_NAME}" == "pull_request" ]; then
            export MO_BRANCH=${PR_REF}
          else
            export MO_BRANCH="master"
          fi

          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          export GITHUB_REPO_URL="https://github.com/${{ github.repository }}"

          ./scripts/build-push-images.sh
  kind_integration_tests:
    strategy:
      matrix:
        integration_test:
        - simple_smoke_test
    name: Integration tests (${{ matrix.integration_test }})
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      GOROOT: /usr/local/go1.13
    steps:
      - name: Checkout code
        # actions/checkout@v2
        uses: actions/checkout@722adc6
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Install Mage
        run: |
          cd /tmp
          wget https://github.com/magefile/mage/releases/download/v1.9.0/mage_1.9.0_Linux-64bit.tar.gz
          tar -xvf mage_1.9.0_Linux-64bit.tar.gz
          mkdir -p $GOPATH/bin
          mv mage $GOPATH/bin/mage
          chmod +x $GOPATH/bin/mage
      - name: Setup Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Install Kind
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          M_K8S_FLAVOR=kind mage k8s:installTool
      - name: Setup Kind Cluster, build and load operator image
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          M_K8S_FLAVOR=kind mage k8s:setupEmptyCluster
      - name: Run integration test ( ${{ matrix.integration_test }} )
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          M_INTEG_DIR=${{ matrix.integration_test }} mage integ:run
      - name: Archive k8s logs
        if: ${{ always() }}
        # actions/upload-artifact@v1
        uses: actions/upload-artifact@3446296
        with:
          name: k8s-logs
          path: ./build/kubectl_dump
